!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUILTIN_CMD	builtin.c	/^} BUILTIN_CMD;$/;"	t	typeref:struct:builtin_cmd	file:
CMD_HANDLER	builtin.c	/^typedef void (*CMD_HANDLER)(void);$/;"	t	file:
COMMAND	def.h	/^} COMMAND;$/;"	t	typeref:struct:command
ERR_EXIT	def.h	6;"	d
MAXARG	def.h	15;"	d
MAXLINE	def.h	14;"	d
MAXNAME	def.h	17;"	d
MAX_LEN	init.c	8;"	d	file:
NODE	def.h	/^}NODE;$/;"	t	typeref:struct:node
OPEN_MAX	def.h	18;"	d
PIPELINE	def.h	16;"	d
Sig	init.c	/^void Sig(void)$/;"	f
_BUILTIN_H_	builtin.h	2;"	d
_DEF_H_	def.h	2;"	d
_EXECUTE_H_	execute.h	2;"	d
_EXTERNS_H_	externs.h	2;"	d
_INIT_H_	init.h	2;"	d
_PARSE_H_	parse.h	2;"	d
append	main.c	/^int append;$/;"	v
args	def.h	/^	char *args[MAXARG+1];	\/* 解析出的命令参数列表 *\/$/;"	m	struct:command
avline	main.c	/^char avline[MAXLINE+1];$/;"	v
avptr	main.c	/^char *avptr;$/;"	v
backcn	def.h	/^   char *backcn[20];$/;"	m	struct:node
backgnd	main.c	/^int backgnd;$/;"	v
builtin	builtin.c	/^int builtin(void)$/;"	f
builtin_cmd	builtin.c	/^typedef struct builtin_cmd$/;"	s	file:
builtins	builtin.c	/^BUILTIN_CMD builtins[] = $/;"	v
check	parse.c	/^int check(const char *str)$/;"	f
cmd	main.c	/^COMMAND cmd[PIPELINE];$/;"	v
cmd_count	main.c	/^int cmd_count;$/;"	v
cmdline	main.c	/^char cmdline[MAXLINE+1];$/;"	v
command	def.h	/^typedef struct command$/;"	s
do_about	builtin.c	/^void do_about(void)$/;"	f
do_cd	builtin.c	/^void do_cd(void)$/;"	f
do_exit	builtin.c	/^void do_exit(void)$/;"	f
do_jobs	builtin.c	/^void do_jobs(void)$/;"	f
do_kill	builtin.c	/^void do_kill(void)$/;"	f
do_type	builtin.c	/^void do_type(void)$/;"	f
execute_command	parse.c	/^int execute_command(void)$/;"	f
execute_disk_command	execute.c	/^int execute_disk_command(void)$/;"	f
forkexec	execute.c	/^void forkexec(int i)$/;"	f
get_command	parse.c	/^void get_command(int i)$/;"	f
getname	parse.c	/^void getname(char *name)$/;"	f
handler	builtin.c	/^	CMD_HANDLER handler;$/;"	m	struct:builtin_cmd	file:
head	main.c	/^NODE *head;$/;"	v
infd	def.h	/^	int infd;$/;"	m	struct:command
infile	main.c	/^char infile[MAXNAME+1];$/;"	v
init	init.c	/^void init(void)$/;"	f
lastpid	main.c	/^int lastpid;$/;"	v
lineptr	main.c	/^char *lineptr;$/;"	v
main	main.c	/^int main(void)$/;"	f
name	builtin.c	/^	char *name;$/;"	m	struct:builtin_cmd	file:
next	def.h	/^   struct node *next;$/;"	m	struct:node	typeref:struct:node::node
node	def.h	/^typedef struct node$/;"	s
npid	def.h	/^   pid_t npid;$/;"	m	struct:node
outfd	def.h	/^	int outfd;$/;"	m	struct:command
outfile	main.c	/^char outfile[MAXNAME+1];$/;"	v
parse_command	parse.c	/^int parse_command(void)$/;"	f
print_command	parse.c	/^void print_command()$/;"	f
read_command	parse.c	/^int read_command(void)$/;"	f
setup	init.c	/^void setup(void)$/;"	f
shell_loop	parse.c	/^void shell_loop(void)$/;"	f
sigint_handler	init.c	/^void sigint_handler(int sig)$/;"	f
